"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Wed Aug 20 11:17:20 GMT 2025","Wed Aug 20 11:17:20 GMT 2025","556","","com.fakeapistoreapi.tests.cart.GetCartTest","","com.fakeapistoreapi.tests.cart.GetCartTest","getAllCarts","Get All Carts","Verify retrieving all carts returns 200 and a non-empty list"
"passed","Wed Aug 20 11:17:17 GMT 2025","Wed Aug 20 11:17:18 GMT 2025","584","","com.fakeapistoreapi.tests.cart.DeleteCartTest","","com.fakeapistoreapi.tests.cart.DeleteCartTest","deleteNonExistingCart","Delete Cart - Non-existing Cart","Verify that deleting a non-existing cart still returns 200 OK in FakeStoreAPI"
"failed","Wed Aug 20 11:17:18 GMT 2025","Wed Aug 20 11:17:18 GMT 2025","524","","com.fakeapistoreapi.tests.cart.DeleteCartTest","","com.fakeapistoreapi.tests.cart.DeleteCartTest","deleteCartWithInvalidId","Delete Cart - Invalid ID Format","Verify that deleting a cart with invalid ID format returns 404 Not Found"
"failed","Wed Aug 20 11:17:38 GMT 2025","Wed Aug 20 11:17:39 GMT 2025","1482","","com.fakeapistoreapi.tests.product.UpdateProductTest","","com.fakeapistoreapi.tests.product.UpdateProductTest","updateProductInvalidId","Update fails with invalid product ID","Verify that updating a product using a non-existent or invalid product ID returns status 404."
"failed","Wed Aug 20 11:17:32 GMT 2025","Wed Aug 20 11:17:33 GMT 2025","1187","","com.fakeapistoreapi.tests.product.DeleteProductTest","","com.fakeapistoreapi.tests.product.DeleteProductTest","deleteProductTwice","Delete Product - Already Deleted","Verify that attempting to delete a product that was already deleted returns an error."
"passed","Wed Aug 20 11:17:18 GMT 2025","Wed Aug 20 11:17:19 GMT 2025","643","","com.fakeapistoreapi.tests.cart.GetCartTest","","com.fakeapistoreapi.tests.cart.GetCartTest","getCartByValidId","Get Cart by Valid ID","Verify retrieving a valid cart by ID returns 200 and correct cart details"
"passed","Wed Aug 20 11:17:37 GMT 2025","Wed Aug 20 11:17:38 GMT 2025","502","","com.fakeapistoreapi.tests.product.GetProductTest","","com.fakeapistoreapi.tests.product.GetProductTest","getProductsWithLimit","Get products with a limit parameter","Verify that retrieving products with a limit parameter returns only the specified number of products."
"passed","Wed Aug 20 11:17:37 GMT 2025","Wed Aug 20 11:17:37 GMT 2025","625","","com.fakeapistoreapi.tests.product.GetProductTest","","com.fakeapistoreapi.tests.product.GetProductTest","getProductByValidId","Get product by valid ID","Verify that retrieving a product by a valid ID returns status code 200 and correct product details."
"passed","Wed Aug 20 11:17:36 GMT 2025","Wed Aug 20 11:17:36 GMT 2025","555","","com.fakeapistoreapi.tests.product.GetProductTest","","com.fakeapistoreapi.tests.product.GetProductTest","getAllProducts","Get all products","Verify that retrieving all products returns status code 200 and a non-empty list."
"passed","Wed Aug 20 11:17:41 GMT 2025","Wed Aug 20 11:17:41 GMT 2025","529","","com.fakeapistoreapi.tests.product.UpdateProductTest","","com.fakeapistoreapi.tests.product.UpdateProductTest","updateProductWithValidData","Successfully update an existing product","Verify that updating an existing product with valid details returns status 200 and correct updated fields."
"passed","Wed Aug 20 11:17:06 GMT 2025","Wed Aug 20 11:17:06 GMT 2025","680","","com.fakeapistoreapi.tests.auth.LoginTest","","com.fakeapistoreapi.tests.auth.LoginTest","tokenNotNullOrEmpty","Login: token not null/empty","Token should not be null or empty for valid credentials."
"passed","Wed Aug 20 11:17:14 GMT 2025","Wed Aug 20 11:17:15 GMT 2025","1253","","com.fakeapistoreapi.tests.cart.CreateCartTest","","com.fakeapistoreapi.tests.cart.CreateCartTest","createValidCart","Create a valid cart","Verify that a new valid cart can be created successfully"
"passed","Wed Aug 20 11:17:41 GMT 2025","Wed Aug 20 11:17:42 GMT 2025","762","","com.fakeapistoreapi.tests.user.CreateUserTest","","com.fakeapistoreapi.tests.user.CreateUserTest","createValidUser_shouldReturn2xxAndId","Create user → returns 2xx and id","POST /users with a valid payload should return 200/201 and include an id"
"passed","Wed Aug 20 11:17:07 GMT 2025","Wed Aug 20 11:17:08 GMT 2025","688","","com.fakeapistoreapi.tests.auth.LoginTest","","com.fakeapistoreapi.tests.auth.LoginTest","responseTimeUnder5Seconds","Login: response time < 5s","Response time for valid login should be under 5 seconds."
"passed","Wed Aug 20 11:17:06 GMT 2025","Wed Aug 20 11:17:07 GMT 2025","650","","com.fakeapistoreapi.tests.auth.LoginTest","","com.fakeapistoreapi.tests.auth.LoginTest","contentTypeIsJson","Login: Content-Type contains application/json","Content-Type header should include application/json."
"failed","Wed Aug 20 11:17:09 GMT 2025","Wed Aug 20 11:17:10 GMT 2025","685","","com.fakeapistoreapi.tests.auth.LoginTest","","com.fakeapistoreapi.tests.auth.LoginTest","invalidPasswordShouldFail","Invalid password returns 401","Invalid password should return 401 (this will fail with FakeStoreAPI)"
"failed","Wed Aug 20 11:17:33 GMT 2025","Wed Aug 20 11:17:34 GMT 2025","562","","com.fakeapistoreapi.tests.product.DeleteProductTest","","com.fakeapistoreapi.tests.product.DeleteProductTest","deleteProductWithInvalidId","Delete Product - Invalid Product ID","Verify that deleting a non-existent product returns an error status code."
"passed","Wed Aug 20 11:17:42 GMT 2025","Wed Aug 20 11:17:43 GMT 2025","668","","com.fakeapistoreapi.tests.user.CreateUserTest","","com.fakeapistoreapi.tests.user.CreateUserTest","createUser_minimalContract_shouldHold","Create user → minimal response contract","Verify the create user response at least has id and is JSON"
"failed","Wed Aug 20 11:17:50 GMT 2025","Wed Aug 20 11:17:51 GMT 2025","651","","com.fakeapistoreapi.tests.user.UpdateUserTest","","com.fakeapistoreapi.tests.user.UpdateUserTest","updateNonExistentUser","Update non-existent user","Verify that updating a non-existent user returns a 404 Not Found"
"failed","Wed Aug 20 11:17:47 GMT 2025","Wed Aug 20 11:17:49 GMT 2025","1991","","com.fakeapistoreapi.tests.user.DeleteUserTest","","com.fakeapistoreapi.tests.user.DeleteUserTest","deleteUserTwice","Delete a user twice","Verify that deleting a user twice returns 404 the second time"
"failed","Wed Aug 20 11:17:20 GMT 2025","Wed Aug 20 11:17:21 GMT 2025","1177","","com.fakeapistoreapi.tests.cart.UpdateCartTest","","com.fakeapistoreapi.tests.cart.UpdateCartTest","updateNonExistentCart","Update Non-Existent Cart","Verify that updating a non-existent cart returns 404 Not Found."
"failed","Wed Aug 20 11:17:36 GMT 2025","Wed Aug 20 11:17:37 GMT 2025","471","","com.fakeapistoreapi.tests.product.GetProductTest","","com.fakeapistoreapi.tests.product.GetProductTest","getProductByInvalidId","Get product by invalid ID","Verify that retrieving a product by an invalid ID returns status code 404."
"failed","Wed Aug 20 11:17:28 GMT 2025","Wed Aug 20 11:17:30 GMT 2025","2393","","com.fakeapistoreapi.tests.cart.UpdateCartTest","","com.fakeapistoreapi.tests.cart.UpdateCartTest","updateCartWithEmptyProductList","Update Cart with Empty Product List","Verify that updating a cart with an empty product list returns 400 Bad Request."
"passed","Wed Aug 20 11:17:34 GMT 2025","Wed Aug 20 11:17:35 GMT 2025","986","","com.fakeapistoreapi.tests.product.DeleteProductTest","","com.fakeapistoreapi.tests.product.DeleteProductTest","deleteProductMissingId","Delete Product - Missing ID","Verify that attempting to delete a product without specifying an ID returns an error."
"passed","Wed Aug 20 11:17:00 GMT 2025","Wed Aug 20 11:17:05 GMT 2025","4941","","com.fakeapistoreapi.tests.auth.LoginTest","","com.fakeapistoreapi.tests.auth.LoginTest","validLoginReturnsToken","Login: 201 + token for valid credentials","Valid login should return 201 and a non-empty token."
"passed","Wed Aug 20 11:17:13 GMT 2025","Wed Aug 20 11:17:14 GMT 2025","1482","","com.fakeapistoreapi.tests.cart.CreateCartTest","","com.fakeapistoreapi.tests.cart.CreateCartTest","createCartWithMissingOptionalFields","Create cart with missing optional fields","Verify that a cart can be created even if optional fields are missing"
"failed","Wed Aug 20 11:17:50 GMT 2025","Wed Aug 20 11:17:50 GMT 2025","605","","com.fakeapistoreapi.tests.user.GetUserTest","","com.fakeapistoreapi.tests.user.GetUserTest","getNonExistentUser","Get Non-Existent User","This test verifies that fetching a user with an invalid ID returns 404 Not Found."
"passed","Wed Aug 20 11:17:35 GMT 2025","Wed Aug 20 11:17:36 GMT 2025","567","","com.fakeapistoreapi.tests.product.DeleteProductTest","","com.fakeapistoreapi.tests.product.DeleteProductTest","deleteProductWithNonNumericId","Delete Product - Non-numeric Product ID","Verify that deleting a product with a non-numeric ID returns a 400 Bad Request or 404 Not Found."
"passed","Wed Aug 20 11:17:52 GMT 2025","Wed Aug 20 11:17:53 GMT 2025","1113","","com.fakeapistoreapi.tests.user.UpdateUserTest","","com.fakeapistoreapi.tests.user.UpdateUserTest","updateUserWithValidData","Update user with valid data","Verify that an existing user can be updated successfully"
"passed","Wed Aug 20 11:17:15 GMT 2025","Wed Aug 20 11:17:17 GMT 2025","1920","","com.fakeapistoreapi.tests.cart.DeleteCartTest","","com.fakeapistoreapi.tests.cart.DeleteCartTest","deleteExistingCart","Delete Cart - Existing Cart","Verify that an existing cart can be successfully deleted"
"passed","Wed Aug 20 11:17:43 GMT 2025","Wed Aug 20 11:17:44 GMT 2025","704","","com.fakeapistoreapi.tests.user.CreateUserTest","","com.fakeapistoreapi.tests.user.CreateUserTest","ensureDynamicUserExists","Ensure dynamic user exists","Use TestDataUtil to create a user and return its id for downstream tests"
"failed","Wed Aug 20 11:17:10 GMT 2025","Wed Aug 20 11:17:10 GMT 2025","613","","com.fakeapistoreapi.tests.auth.LoginTest","","com.fakeapistoreapi.tests.auth.LoginTest","invalidUsernameShouldFail","Invalid username returns 401","Invalid username should return 401 (this will fail with FakeStoreAPI)"
"passed","Wed Aug 20 11:17:49 GMT 2025","Wed Aug 20 11:17:50 GMT 2025","649","","com.fakeapistoreapi.tests.user.GetUserTest","","com.fakeapistoreapi.tests.user.GetUserTest","getAllUsers","Get All Users","This test verifies that all users can be retrieved successfully using the GET /users endpoint."
"passed","Wed Aug 20 11:17:31 GMT 2025","Wed Aug 20 11:17:31 GMT 2025","509","","com.fakeapistoreapi.tests.product.CreateProductTest","","com.fakeapistoreapi.tests.product.CreateProductTest","createProductReturnsId","Create Product - ID Returned","Verify that the API returns an ID after creating a product"
"failed","Wed Aug 20 11:17:51 GMT 2025","Wed Aug 20 11:17:52 GMT 2025","1117","","com.fakeapistoreapi.tests.user.UpdateUserTest","","com.fakeapistoreapi.tests.user.UpdateUserTest","updateUserWithInvalidData","Update user with invalid data","Verify that updating a user with invalid data returns a bad request"
"passed","Wed Aug 20 11:17:44 GMT 2025","Wed Aug 20 11:17:45 GMT 2025","1367","","com.fakeapistoreapi.tests.user.CreateUserTest","","com.fakeapistoreapi.tests.user.CreateUserTest","createTwoValidUsers_shouldReturnDifferentIds","Create two users → different ids","Creating two users with unique data should return different ids"
"passed","Wed Aug 20 11:17:24 GMT 2025","Wed Aug 20 11:17:28 GMT 2025","3548","","com.fakeapistoreapi.tests.cart.UpdateCartTest","","com.fakeapistoreapi.tests.cart.UpdateCartTest","updateCartSuccessfully","Update Cart Successfully","Verify that an existing cart can be updated with valid product data."
"passed","Wed Aug 20 11:17:40 GMT 2025","Wed Aug 20 11:17:41 GMT 2025","509","","com.fakeapistoreapi.tests.product.UpdateProductTest","","com.fakeapistoreapi.tests.product.UpdateProductTest","partialUpdateProduct","Successfully update only some fields of an existing product","Verify that updating only certain fields of a product works as expected and leaves other fields unchanged."
"failed","Wed Aug 20 11:17:39 GMT 2025","Wed Aug 20 11:17:40 GMT 2025","432","","com.fakeapistoreapi.tests.product.UpdateProductTest","","com.fakeapistoreapi.tests.product.UpdateProductTest","updateProductInvalidDataTypes","Update fails with invalid data types in payload","Verify that updating a product with wrong data types in fields returns status 400."
"passed","Wed Aug 20 11:17:45 GMT 2025","Wed Aug 20 11:17:46 GMT 2025","1277","","com.fakeapistoreapi.tests.user.DeleteUserTest","","com.fakeapistoreapi.tests.user.DeleteUserTest","deleteExistingUser","Delete an existing user","Verify that an existing user can be deleted successfully"
"failed","Wed Aug 20 11:17:30 GMT 2025","Wed Aug 20 11:17:31 GMT 2025","531","","com.fakeapistoreapi.tests.product.CreateProductTest","","com.fakeapistoreapi.tests.product.CreateProductTest","createProductWithValidData","Create Product - Valid Data","Verify that a product can be successfully created with valid data"
"passed","Wed Aug 20 11:17:08 GMT 2025","Wed Aug 20 11:17:09 GMT 2025","1387","","com.fakeapistoreapi.tests.auth.LoginTest","","com.fakeapistoreapi.tests.auth.LoginTest","repeatLoginReturnsToken","Login: repeat login returns token","Multiple logins with same valid credentials should each return a token."
"passed","Wed Aug 20 11:17:11 GMT 2025","Wed Aug 20 11:17:13 GMT 2025","1651","","com.fakeapistoreapi.tests.auth.LoginTest","","com.fakeapistoreapi.tests.auth.LoginTest","testInvalidUsername","testInvalidUsername()","Invalid username should return 401 Unauthorized"
"passed","Wed Aug 20 11:17:10 GMT 2025","Wed Aug 20 11:17:11 GMT 2025","674","","com.fakeapistoreapi.tests.auth.LoginTest","","com.fakeapistoreapi.tests.auth.LoginTest","testInvalidPassword","testInvalidPassword()","Invalid password should return 401 Unauthorized"
"failed","Wed Aug 20 11:17:21 GMT 2025","Wed Aug 20 11:17:24 GMT 2025","2877","","com.fakeapistoreapi.tests.cart.UpdateCartTest","","com.fakeapistoreapi.tests.cart.UpdateCartTest","updateCartWithInvalidData","Update Cart with Invalid Data","Verify that updating a cart with invalid product data returns 400 Bad Request."
"passed","Wed Aug 20 11:17:31 GMT 2025","Wed Aug 20 11:17:32 GMT 2025","502","","com.fakeapistoreapi.tests.product.CreateProductTest","","com.fakeapistoreapi.tests.product.CreateProductTest","createProductWithDifferentCategory","Create Product - Different Category","Verify that creating a product with a different category still works"
"passed","Wed Aug 20 11:17:34 GMT 2025","Wed Aug 20 11:17:34 GMT 2025","514","","com.fakeapistoreapi.tests.product.DeleteProductTest","","com.fakeapistoreapi.tests.product.DeleteProductTest","deleteProductWithValidId","Delete Product - Valid Product ID","Verify that a product can be successfully deleted using its valid ID."
"passed","Wed Aug 20 11:17:19 GMT 2025","Wed Aug 20 11:17:20 GMT 2025","608","","com.fakeapistoreapi.tests.cart.GetCartTest","","com.fakeapistoreapi.tests.cart.GetCartTest","getCartsByUserId","Get Carts by User ID","Verify retrieving carts for a valid user ID returns 200"
"failed","Wed Aug 20 11:17:40 GMT 2025","Wed Aug 20 11:17:40 GMT 2025","490","","com.fakeapistoreapi.tests.product.UpdateProductTest","","com.fakeapistoreapi.tests.product.UpdateProductTest","updateProductMissingFields","Update fails when required fields are missing","Verify that updating a product without mandatory fields returns status 400."
"failed","Wed Aug 20 11:17:46 GMT 2025","Wed Aug 20 11:17:47 GMT 2025","606","","com.fakeapistoreapi.tests.user.DeleteUserTest","","com.fakeapistoreapi.tests.user.DeleteUserTest","deleteNonExistingUser","Delete a non-existing user","Verify that deleting a non-existing user returns 404 Not Found"
